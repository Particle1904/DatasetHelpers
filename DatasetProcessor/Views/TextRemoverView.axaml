<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:vm="clr-namespace:DatasetProcessor.ViewModels"
			 xmlns:AvaloniaEdit="clr-namespace:AvaloniaEdit;assembly=AvaloniaEdit"
			 xmlns:controls="clr-namespace:DatasetProcessor.UserControls"
             mc:Ignorable="d" d:DesignWidth="1024" d:DesignHeight="768"
             x:Class="DatasetProcessor.Views.TextRemoverView"
			 x:DataType="vm:TextRemoverViewModel"
			 Background="{DynamicResource SecondarySurfaceDark}">
	<Design.DesignStyle>
		<StyleInclude Source="/Assets/Styles/GlobalStyles.axaml" />
	</Design.DesignStyle>
	<Grid RowDefinitions="auto, 10, auto, 10, auto, 30, auto, 10, auto, 10, auto, 10, auto, 10, auto, 10, auto"
		  Background="Transparent">
		<!-- INPUT FOLDER -->
		<Grid Classes="gridSecondary" Grid.Row="0" ColumnDefinitions="auto, 10, *, 10, auto">
			<Button Grid.Column="0"
					Content="Select input folder"
					Width="180"
					Height="40"
					Command="{Binding SelectInputFolderCommand}"/>
			<Label Grid.Column="2"
				   Content="{Binding InputFolderPath}"
				   HorizontalAlignment="Left"
				   VerticalAlignment="Center"/>
			<Button Grid.Column="4"
					BorderThickness="0"
					Width="40"
					Height="40"
					Command="{Binding OpenFolderInExplorerCommand}"
					CommandParameter="{Binding InputFolderPath}">
				<Panel>
					<Image Source="{SvgImage /Assets/Icons/folder_opened.svg}"
						   HorizontalAlignment="Stretch"
						   VerticalAlignment="Stretch"
						   Margin="1"/>
				</Panel>
			</Button>
		</Grid>
	    <!-- OUTPUT FOLDER -->
		<Grid Classes="gridSecondary" Grid.Row="2" ColumnDefinitions="auto, 10, *, 10, auto">
			<Button Grid.Column="0"
					Content="Select output folder"
					Width="180"
					Height="40"
					Command="{Binding SelectOutputFolderCommand}"/>
			<Label Grid.Column="2"
				   Content="{Binding OutputFolderPath}"
				   HorizontalAlignment="Left"
				   VerticalAlignment="Center"/>
			<Button Grid.Column="4"
					BorderThickness="0"
					Width="40"
					Height="40"
					Command="{Binding OpenFolderInExplorerCommand}"
					CommandParameter="{Binding OutputFolderPath}">
				<Panel>
					<Image Source="{SvgImage /Assets/Icons/folder_opened.svg}"
						   HorizontalAlignment="Stretch"
						   VerticalAlignment="Stretch"
						   Margin="1"/>
				</Panel>
			</Button>
		</Grid>
		<!-- NOTE TEXT BOX -->
		<Panel Grid.Row="4"
			   Background="{DynamicResource SurfaceDark}">
			<TextBlock HorizontalAlignment="Center"
					   Margin="10"
					   TextAlignment="Center"
					   FontWeight="Light"
					   Foreground="{DynamicResource Secondary}"
					   Text="Note: This process will use Florence2 (Optical	Character Recognition), SAM2 (Object Segmentation) and LaMa (Inpainting) AI Models.&#10;It could take a long time to process a large dataset, so keep that in mind!&#10;This is ideal for removing watermarks, logos and other forms of texts. Avoid using it for images without any text or logos or with a large corpses of text!&#10;The process will process all the images in the input folder in 3 stages: Florence2 Object Detection -> SAM2 Mask Creation -> LaMa Inpaint."/>
			
		
		</Panel>
		<Separator Grid.Row="5"/>
		<!-- CURRENTLY PROCESSING -->
		<Label Grid.Row="6"
			   Content="{Binding TextRemoverProgress.TotalFiles, StringFormat='Found {0} images.'}"/>
		<!-- ELAPSED TIME -->
		<Label Grid.Row="8"
			   Content="{Binding ElapsedTime, StringFormat='Text removal elapsed time: {0:hh\\:mm\\:ss\\.fff}'}"/>
		<!-- PROGRESS BAR -->
		<Grid Grid.Row="10"
			  ColumnDefinitions="auto, 10, auto"
			  HorizontalAlignment="Center">
			<Button Width="200"
					Content="Remove images text"
					IsEnabled="{Binding IsUiEnabled}"
					Command="{Binding RemoveTextFromFilesCommand}"/>
			<Button Grid.Column="2"
					Width="120"
					Content="Cancel"
					IsEnabled="{Binding IsCancelEnabled}"
					Command="{Binding CancelTaskCommand}"/>
		</Grid>
		<!-- PROGRESS BAR -->
		<ProgressBar Grid.Row="12"
					 Value="{Binding TextRemoverProgress.PercentComplete}"/>
		<!-- TASk STATUS -->
		<Label Grid.Row="14"
			   FontSize="22"
			   Foreground="{DynamicResource Secondary}"
			   Content="{Binding TaskStatusString}"/>
</Grid>
</UserControl>
